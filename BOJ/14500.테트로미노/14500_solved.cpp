#include<stdio.h>
#include<memory.h>
#define MAX_N 500
int ans,N,M;
int map[MAX_N][MAX_N];
bool shape[19][4][4] = {
	{
		{1,1,1,1},
		{0,0,0,0},
		{0,0,0,0},
		{0,0,0,0},
 },
 {
	 { 1,0,0,0 },
	 { 1,0,0,0 },
	 { 1,0,0,0 },
	 { 1,0,0,0 },
 },
 {
	 { 1,1,0,0 },
	 { 1,1,0,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,1,1,0 },
	 { 0,1,0,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1, 0, 0, 0 },
	 { 1,1,0,0 },
	 { 1,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 0,1,0,0 },
	 { 1,1,1,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 0,1,0,0 },
	 { 1,1,0,0 },
	 { 0,1,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,0,0,0 },
	 { 1,0,0,0 },
	 { 1,1,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,1,1,0 },
	 { 1,0,0,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,1,0,0 },
	 { 0,1,0,0 },
	 { 0,1,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 0,0,1,0 },
	 { 1,1,1,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 0,1,0,0 },
	 { 0,1,0,0 },
	 { 1,1,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,1,1,0 },
	 { 0,0,1,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,0,0,0 },
	 { 1,1,1,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,1,0,0 },
	 { 1,0,0,0 },
	 { 1,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,0,0,0 },
	 { 1,1,0,0 },
	 { 0,1,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 0,1,1,0 },
	 { 1,1,0,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 0,1,0,0 },
	 { 1,1,0,0 },
	 { 1,0,0,0 },
	 { 0,0,0,0 },
 },
 {
	 { 1,1,0,0 },
	 { 0,1,1,0 },
	 { 0,0,0,0 },
	 { 0,0,0,0 },
 }
};
int max(int a, int b) {
	return a > b ? a : b;
}
void solve(int I, int J) {
	int cnt,tmp;
	for (int k = 0; k < 19; k++) {
		cnt = 0; tmp = 0;
		for (int i = 0; i < 4; i++) {
			for (int j = 0; j < 4; j++) {
				if (shape[k][i][j] && i + I < N&& j + J < M) {
					cnt++;
					tmp += map[i + I][j + J];
				}
				if (cnt >= 4)break;
			}
			if (cnt >= 4)break;
		}
		ans = max(ans, tmp);
	}
	return;
}
int main() {
	scanf("%d%d", &N, &M);
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			scanf("%d", &map[i][j]);
		}
	}

	ans = 0;
	for(int i = 0; i < N; i++){
		for (int j = 0; j < M; j++) {
			solve(i, j);
		}
	}
	printf("%d", ans);
	return 0;
}